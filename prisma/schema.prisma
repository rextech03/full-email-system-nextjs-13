// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgres"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Post {
  id        String      @id @default(cuid())
  
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  featuredImage String? @default("https://res.cloudinary.com/dqojz5vft/image/upload/v1701209516/360_F_470299797_UD0eoVMMSUbHCcNJCdv2t8B2g1GVqYgs_chxbh2.jpg")
  courseVideo String? @default("https://res.cloudinary.com/dqojz5vft/image/upload/v1701209516/360_F_470299797_UD0eoVMMSUbHCcNJCdv2t8B2g1GVqYgs_chxbh2.jpg")
  finalCourse Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author    User     @relation(fields: [authorId], references: [id])
  authorId  String

  section    Category     @relation(fields: [sectionId], references: [id])
  sectionId  String

  // user CompletedPost[]

   @@index([authorId])
   @@index([sectionId])
}

model Category {
  id        String      @id @default(cuid())
  
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  featuredImage String? @default("https://res.cloudinary.com/dqojz5vft/image/upload/v1701209516/360_F_470299797_UD0eoVMMSUbHCcNJCdv2t8B2g1GVqYgs_chxbh2.jpg")
  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts   Post[]

  grouper    User     @relation(fields: [grouperId], references: [id])
  grouperId  String
   
  @@index([grouperId])
}

enum UserRole {
  admin
  user
}

model User {
  id String @id @default(cuid())

  name         String?
  email        String? @unique
  passwordHash String?
  profileImage String?  @default("https://res.cloudinary.com/dqojz5vft/image/upload/v1701209516/360_F_470299797_UD0eoVMMSUbHCcNJCdv2t8B2g1GVqYgs_chxbh2.jpg")

  resetPasswordToken String? @unique
  resetPasswordTokenExpiry DateTime?

  emailVerified Boolean @default(false)
  emailVerificationToken String? @unique

  role        UserRole? @default(user)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  posts   Post[]

  category   Category[]

}


